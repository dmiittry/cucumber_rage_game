require "elements_game.core.globals"

local knife_dmg = true

function init(self)
	self.sfera = 5
	self.laser = 2
	self.laser_shoot = 1.5
	self.laser_time = 3.5
	self.speed_time = 5
	math.randomseed(os.time())
	self.speed = SPEED_BOSS
	self.health = HEALTH_BOSS * (DAMAGE_BULLET + KNIFE_DAMAGE + DAMAGE_UNIT) * (2 - SPEED_SHOOT + TIME_SHOOT_AK47)*2
	print("BOSS HP", self.health)
	self.time_shoot = TIME_SHOOT_BOSS
	self.move = true
	self.fire = false
	self.spawn = false
	self.spawn_time = 2000
	timer.delay(1, false, function() self.fire = true end)
	self.damage = DAMAGE_BOSS
	msg.post("#laser", "disable")
	msg.post("#laser_v", "disable")
	msg.post("#laser_v1", "disable")
	msg.post("#laser_h", "disable")
	go.animate(".", "scale", go.PLAYBACK_LOOP_PINGPONG, vmath.vector3(1.3,1.3,1), go.EASING_LINEAR, 2)
	local rad = go.get(".", "euler.z")
	go.animate(".", "euler.z", go.PLAYBACK_LOOP_FORWARD, rad + 360, go.EASING_LINEAR, 13)
end

local function red_dead_monster(self)
	self.move = false
	self.fire = false
	msg.post("/player/one_pistol", "dead_monster")
	change_exp(SCORE_BOSS)
	change_money(MONEY_BOSS)
	go.cancel_animations(".", "position")
	msg.post("#collisionobject", "disable")
	go.animate(".", "scale", go.PLAYBACK_ONCE_FORWARD, vmath.vector3(0,0,0), go.EASING_OUTSINE, 0.5)
	go.animate(".", "rotation", go.PLAYBACK_ONCE_FORWARD, vmath.quat(0,0,1,1), go.EASING_OUTSINE, 0.5)
	timer.delay(0.7, false, function()
		msg.post("main:/spawn_monster/go#spawn", "boss_dead")
		go.delete()
	end)
end

local function hitted_monster(self, value)
	KOL_DAMAGE = KOL_DAMAGE + value
	self.health = self.health - value
	if self.health <= 0 then
		red_dead_monster(self)
	end
end

local function push_monster(self, dir)
	local to = go.get_position() + dir * PUSH_MONSTER
	go.animate(".", "position", go.PLAYBACK_ONCE_FORWARD, to, go.EASING_OUTQUAD, 0.1,0, move_monster)
end

local function set_color(self)
	go.set("#sprite", "tint", vmath.vector4(1,1,1,1)) 
end

local function hitted_animate(self)
	go.animate("#sprite", "tint", go.PLAYBACK_ONCE_PINGPONG, vmath.vector4(150,255,55,1), go.EASING_LINEAR, 0.1, 0, set_color)
end

local function red_move_monster(tg, self)
	if tg == nil then
		tg = vmath.vector3(0.1,0.1,0)
	end
	if tg.x < 320 then
		tg.x = tg.x - 120
		if tg.x < 32 then
			tg.x = 40
		end
	else
		tg.x = tg.x + 120
		if tg.x > 608 then
			tg.x = 610
		end
	end
	if tg.y < 182 then
		tg.y = tg.y - 100
		if tg.x < 32 then
			tg.x = 40
		end
	else
		tg.y = tg.y + 100
		if tg.y > 338 then
			tg.y = 340
		end
	end
	local current_pos = go.get_position()
	local target_pos = vmath.vector3(tg.x, tg.y, 0) 
	local angle = math.atan2(current_pos.x  - target_pos.x, target_pos.y - current_pos.y)
	sprite.set_hflip("#sprite", angle < 0 )
	local distance = vmath.length(target_pos - current_pos)
	local duration = distance / self.speed 
	go.animate(".", "position", go.PLAYBACK_ONCE_FORWARD, target_pos, go.EASING_LINEAR, duration, 0)
end

local directionx = {0, 30, 60, 90, 120, -30, -60, -90, -120}
local directiony = {0, 30, 60, 90, 120, -30, -60, -90, -120}

local function shoot(target_position, gl , self)
	if target_position == gl then
		target_position = target_position + vmath.vector3(0.1,0.1,0)
	end
	local rota = vmath.quat_rotation_z(0)
	for i = 1 , #directionx do
		local dir = vmath.vector3(target_position.x- gl.x, target_position.y - gl.y, 0)
		dir = dir - vmath.vector3(directionx[i],directiony[i], 0)
		local bullet = factory.create("#bullet", nil,rota,{dir = vmath.normalize(dir), damage = self.damage})
	end
	timer.delay(self.time_shoot, false, function() self.fire = true end)
end

local function spawn_enemy(target_position, gl, self)
	if target_position == gl then
		target_position = target_position + vmath.vector3(0.1,0.1,0)
	end
	local rota = vmath.quat_rotation_z(0)
	for i = 1 , #directionx do
		KOL_MONSTER = KOL_MONSTER + 1
		local dir = vmath.vector3(target_position.x- gl.x, target_position.y - gl.y, 0)
		dir = dir - vmath.vector3(directionx[i],directiony[i], 0)
		local bullet = factory.create("#minis_factory", gl , rota, {dir = vmath.normalize(dir)})
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("hit") then
		hitted_animate(self)
		hitted_monster(self, message.value)
	elseif message_id == hash("trigger_response") then
		if message.other_group == hash("knife") then
			if message.enter then
				hitted_animate(self)
				local rota = vmath.quat(0,0,0,0)
				factory.create("#factory", nil, rota, {damage = KNIFE_DAMAGE})
				hitted_monster(self, KNIFE_DAMAGE)
			end
		elseif message.other_group == hash("player") then
			if message.enter then
				msg.post(message.other_id, "hit_player", {value = self.damage})
			end
		end
		
	elseif message_id == hash("collision_response") then
		if message.other_group == hash("trigger") then
			local tg = message.other_position
			local target_position = vmath.vector3(tg.x, tg.y, 0)
			local gl = go.get_position(go.get_parent())
			if self.fire then
				shoot(target_position, gl, self)
				self.fire = false
			end
			if self.spawn then
				spawn_enemy(target_position, gl, self)
				self.spawn = false
			end
			red_move_monster(tg, self)
		end
	elseif message_id == hash("contact_point_response") then
		if message.other_group == hash("player") then
			msg.post(message.other_id, "hit_player", {value = self.damage})
		end
	end
end
	
function update(self, dt)
	self.spawn_time = self.spawn_time - dt
	self.speed_time = self.speed_time - dt
	self.sfera = self.sfera - dt
	if self.speed_time < 0 then
		self.speed = 20
	end
	if self.spawn_time < 0 then
		self.spawn = true
		self.spawn_time = 5
	end
	if self.health < self.health - 1000 then
		self.spawn_time = 20
	elseif self.health < self.health /2 then
		self.spawn_time = 15
	elseif self.health < self.health /5 then
		self.spawn_time = 10
	elseif self.health < self.health /10 then
		self.spawn_time = 5
	end
	if self.sfera < 0 then
		self.fire = false
		self.laser = self.laser - dt
		if self.laser < 0 then
			go.set("#laser_h", "size", vmath.vector3(1280, 2, 0))
			go.set("#laser_v1", "size", vmath.vector3(1280, 2, 0))
			go.set("#laser_v", "size", vmath.vector3(1280, 2, 0))
			msg.post("#laser_v", "enable")
			msg.post("#laser_v1", "enable")
			msg.post("#laser_h", "enable")
			self.laser_shoot = self.laser_shoot - dt
			if self.laser_shoot < 0 then
				go.set("#laser_h", "size", vmath.vector3(1280, 10, 0))
				go.set("#laser_v1", "size", vmath.vector3(1280, 10, 0))
				go.set("#laser_v", "size", vmath.vector3(1280, 10, 0))
				msg.post("#laser", "enable")
				go.animate("#laser_v", "size", go.PLAYBACK_LOOP_PINGPONG, vmath.vector3(1280, 15, 0), go.EASING_LINEAR, 0.2)
				go.animate("#laser_v1", "size", go.PLAYBACK_LOOP_PINGPONG, vmath.vector3(1280, 15, 0), go.EASING_LINEAR, 0.2)
				go.animate("#laser_h", "size", go.PLAYBACK_LOOP_PINGPONG, vmath.vector3(1280, 15, 0), go.EASING_LINEAR, 0.2)
				self.laser_time = self.laser_time - dt
				if self.laser_time < 0 then
					msg.post("#laser", "disable")
					msg.post("#laser_v", "disable")
					msg.post("#laser_v1", "disable")
					msg.post("#laser_h", "disable")
					go.cancel_animations("#laser_v", "size")
					go.cancel_animations("#laser_v1", "size")
					go.cancel_animations("#laser_h", "size")
					self.sfera = 5
					self.fire = true
					self.laser_time = 3.5
					self.laser_shoot = 1.5
					self.laser = 2
				end
			end
		end
	end
end



