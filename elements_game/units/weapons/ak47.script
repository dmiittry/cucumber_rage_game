require "elements_game.core.globals"

function init(self)
	msg.post(".", "acquire_input_focus")
	self.fire = true
	go.set_rotation(vmath.quat_rotation_z(90))
	msg.post(".", "disable")
	self.correct =  vmath.vector3(-15,27,0)
end

local function shoot(target_position, gl , self)
	-- go.animate(".", "rotation", go.PLAYBACK_ONCE_BACKWARD, vmath.quat(0, 0, 0, 0.7), go.EASING_INBOUNCE, 0.2)
	if target_position == gl then
		target_position = target_position + vmath.vector3(0.1,0.1,0)
	end
	local dir = vmath.vector3(target_position.x- gl.x, target_position.y - gl.y, 0)
	local angle = math.atan2(gl.x  - target_position.x, target_position.y - gl.y)
	local rota = vmath.quat_rotation_z(angle)
	local otdacha = vmath.quat(rota.x, rota.y, rota.z, rota.w + 0.2)
	go.animate(".", "rotation", go.PLAYBACK_ONCE_BACKWARD, otdacha, go.EASING_INBOUNCE, 0.5)
	sprite.set_vflip("#sprite", angle < 0 )
	go.set_rotation(rota)
	local bullet = factory.create("#bullet", nil, rota,{dir = vmath.normalize(dir), damage = DAMAGE_UNIT, ak = true})
	timer.delay(TIME_SHOOT_AK47, false, function()
		self.fire = true
	end)
end

local enemy_list = {}
local nearest_enemy = nil
local nearest_distance = math.huge

local function change_nearest_enemy()
	enemy_list = {}
	nearest_enemy = nil
	nearest_distance = math.huge
end

function on_message(self, message_id, message, sender)
	if message_id == hash("dead_monster") then
		-- change_nearest_enemy()
	elseif message_id == hash("collision_response") then
		if message.other_group == hash("enemy") or message.other_group == hash("boss")  then
			local pos = message.other_position
			local target_position = vmath.vector3(pos.x, pos.y, 0)
			local gl = go.get_position(go.get_parent()) + self.correct
			if self.fire then
				sound.play("#fire")
				shoot(target_position, gl, self)
				self.fire = false
			end
		end
	elseif message_id == hash("add_ak") then
		self.correct = message.value
		msg.post(".", "enable")	
	end
end
