require "elements_game.core.globals"

function init(self)
	self.health = 3
	msg.post("#collisionobject", "enable")
	go.animate(".", "scale", go.PLAYBACK_LOOP_PINGPONG, vmath.vector3(1.2,1.2,1), go.EASING_LINEAR, 0.5)
end

local function blue_dead_monster(self)
	msg.post("/player/one_pistol", "dead_monster")
	change_exp(SCORE_SUNDUK)
	change_money(MONEY_SUNDUK)
	msg.post("#collisionobject", "disable")
	go.animate(".", "scale", go.PLAYBACK_ONCE_FORWARD, vmath.vector3(0,0,0), go.EASING_OUTSINE, 0.5)
	go.animate(".", "rotation", go.PLAYBACK_ONCE_FORWARD, vmath.quat(0,0,1,1), go.EASING_OUTSINE, 0.5)
	timer.delay(0.7, false, function() go.delete() end)
end

local function hitted_monster(self, value)
	self.health = self.health - 1
	if self.health <= 0 then
		blue_dead_monster(self)
	end
end

local function set_color(self)
	go.set("#sprite", "tint", vmath.vector4(1,1,1,1)) 
end

local function hitted_animate(self)
	go.animate("#sprite", "tint", go.PLAYBACK_ONCE_PINGPONG, vmath.vector4(150,255,55,1), go.EASING_LINEAR, 0.1, 0, set_color)
end

function on_message(self, message_id, message, sender)
	if message_id == hash("hit") then
		hitted_animate(self)
		hitted_monster(self, message.value)
	elseif message_id == hash("trigger_response") then
		if message.other_group == hash("knife") then
			if message.enter then
				hitted_animate(self)
				hitted_monster(self, KNIFE_DAMAGE)
			end	
		end
	end
end





