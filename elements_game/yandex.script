require("elements_game.core.globals")
local yagames = require("yagames.yagames")

local function adv_open(self)
	print('open')
	for key, value in pairs(sound.get_groups()) do
		sound.set_group_gain(value, 0)
	end
end

local function adv_close(self, was_shown)
	print('close')
	for key, value in pairs(sound.get_groups()) do
		sound.set_group_gain(value, 1)
	end
end

local function adv_offline(self)
	print('offle')
	-- Internet is offline
end

local function adv_error(self, err)
	if err then
		print("bad adv_error :(", err)
	end
end

local function rewarded_open(self)
	print('reward open')
	for key, value in pairs(sound.get_groups()) do
		sound.set_group_gain(value, 0)
	end
end

local function rewarded_rewarded(self)
	print('reward rewarded')
	change_money(300)
end

local function rewarded_close(self)
	for key, value in pairs(sound.get_groups()) do
		sound.set_group_gain(value, 1)
	end
end

local function rewarded_error(self, err)
	if err then
		print("bad rewarded_error :(", err)
	end
end

local function getstats(self, err, result)
	if result.score == nil then
		ALL_KILL_MONSTER = 0
	else
		ALL_KILL_MONSTER = result.score
	end
	print("add getstats :(", result)
	if err then
		print("bad getstats :(", err)
	end
end

local function setstats(self, err)
	if err then
		print("set_data player:", err)
	end
end

local function showfeedback(self, err, result)
	if err then
		print("bad showfeedback :(", err)
	end
end

local function canshowfeedback(self, err, result)
	if result then
		yagames.feedback_request_review(showfeedback)
	end
	if err then
		print("bad canshowfeedback :(", err)
	end
end
local function auth_player(self, err, result)
	if err then
		print("bad auth_player :(", err)
	end
end
local function getplayer(self, err)
	yagames.player_get_stats(nil, getstats)
	if err then
		yagames.auth_open_auth_dialog(function(self, err)
			print("yagames.auth_open_auth_dialog:", err or "OK!")
		end)
		print("bad getplayer :", err)
	end
end

local function init_handler(self, err)
	if err then
		print("bad init_handler :(", err)
	else
		print('open')
		yagames.player_init({scopes = false, signed = true}, getplayer)
		msg.post(".", "show_fullscreen_adv")
		player_name = yagames.player_get_name()
		PLAYER_NAME = player_name
		yagames.features_loadingapi_ready()
	end
end

function init(self)
	yagames.init(init_handler)
end

function on_message(self, message_id, message)
	if message_id == hash("show_rewarded_video") then
		print('show_rewarded_video')
		yagames.adv_show_rewarded_video({
			open = rewarded_open,
			rewarded = rewarded_rewarded,
			close = rewarded_close,
			error = rewarded_error
		})
	elseif message_id == hash("show_fullscreen_adv") then
		print('show_fullscreen_adv')
		yagames.adv_show_fullscreen_adv({
			open = adv_open,
			close = adv_close,
			offline = adv_offline,
			error = adv_error
		})
	elseif message_id == hash("show_feedback") then
		yagames.feedback_can_review(canshowfeedback)
		print("feedback:", ret)
	elseif message_id == hash("get_stats") then
		yagames.player_init({scopes = false, signed = true}, getplayer)
		print("get_stats:")
	elseif message_id == hash("set_stats") then
		yagames.player_set_stats({score = message.value}, true, setstats)
		print("set_stats:")
				
	elseif message_id == hash("leaderboard") then
		yagames.leaderboards_set_score({leaderboardName = player_name, score = message.value}, nil, function(self, err)
			print("yagames.leaderboards_set_score (score=1):", err or "OK")
		end)
		
		print("leaderbord:", player_name)
	elseif message_id == hash("get_device") then
		local device = yagames.device_info_is_desktop()
		print('desk', device)
		if device then
			GAMEPAD_ON = false
		else
			GAMEPAD_ON = true
		end
	end
end